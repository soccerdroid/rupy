# This file contains the PEG grammar definition that
# Treetop uses to generate our parser.
#
# For more information check out the Treetop site:
# http://treetop.rubyforge.org/

grammar Sexp

  rule expression
    (declareOpenFile / forLoop) space? newLine*
  end

  rule declareOpenFile
   space? word space? '=' space? openFile
  end

  rule printFunction
    'print' space? (word/string)
  end
  rule forLoop
    'for' space? word space? 'in' space? word space? ':' '\n' ('\t' expression)+ 
  end

  rule openFile
    'open' space? '(' ( word / string ) space? (',' (('"' / '\'') ('r'/'w'/'a'/'r+'/'w+'/'a+')) ('"' / '\''))? space? ')'
  end


 # rule number
  #  '-'? [1-9] [0-9]*
  #end

  #rule conditional_sentence
  #  conditional_keyword word (!conditional_keyword)+ [ \t]+ word*
  #end
  #rule condition
  #  ('not')? word ('and'/'or') word
  #end
  #rule conditional_keyword
  #    'if' / 'while'
  #  end

  rule integer
    ('+' / '-')? [0-9]+ <IntegerLiteral>
  end
  
  rule float
    ('+' / '-')? [0-9]+ (('.' [0-9]+) / ('e' [0-9]+)) <FloatLiteral>
  end

  rule space
    [\s]+
  end

  rule string
    '"' ([^"\\] / "\\" . )* '"' <StringLiteral>
  end

  rule newLine
    [\n]+
  end

  rule word
      [a-zA-Z]+
  end
  
end